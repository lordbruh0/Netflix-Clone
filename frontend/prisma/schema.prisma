// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  name String
  transactions Transaction[]
  myLists MyList[]
  watchHistory WatchHistory[]
}

model Movie {
  id String @id @default(uuid())
  title String
  description String
  imageUrl String
  price Float
  view Int @default(0) 
  transactions Transaction[]
  myLists MyList[]
  watchHistory WatchHistory[]
}

model Transaction {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  movie Movie @relation(fields: [movieId], references: [id])
  movieId String
  createdAt DateTime @default(now())
}

model MyList {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  movie Movie @relation(fields: [movieId], references: [id])
  movieId String
  warched Boolean @default(false)
  createdAt DateTime @default(now())
}

model WatchHistory{
   id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   String
  watchedAt DateTime @default(now())
}